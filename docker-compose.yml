version: '3'

services:
  namenode:
    image: apache/hadoop:3.3.5
    container_name: namenode
    hostname: namenode
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop_namenode:/opt/hadoop/data/nameNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./start-hdfs.sh:/start-hdfs.sh
      - ./flickr30k_images:/data/images
      - ./results.csv:/data/results.csv
    ports:
      - "9870:9870"
    command: [ "/bin/bash", "/start-hdfs.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.2

  datanode1:
    image: apache/hadoop:3.3.5
    container_name: datanode1
    hostname: datanode1
    user: root
    environment:
      - HADOOP_HOME=/opt/hadoop
    volumes:
      - ./hadoop_datanode1:/opt/hadoop/data/dataNode
      - ./hadoop_config:/opt/hadoop/etc/hadoop
      - ./init-datanode.sh:/init-datanode.sh
    depends_on:
      - namenode
    command: [ "/bin/bash", "/init-datanode.sh" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.3

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.5

  kafka:
    image: kafka:lab
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    volumes:
      - ./flickr30k_images:/data/images
      - ./results.csv:/data/results.csv
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.6

  spark-master:
    image: spark:lab
    container_name: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.7

  spark-worker:
    image: spark:lab
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.8

  t5-search:
    build:
      context: .
      dockerfile: Dockerfile.search
    container_name: t5-search
    depends_on:
      - spark-master  # đảm bảo dữ liệu (CSV chứa caption) đã được tạo ra
    volumes:
      - ./results.csv:/data/results.csv
    environment:
      - SEARCH_QUERY=biển xanh
      - CSV_PATH=/data/results.csv
      - TOP_RESULTS=5
    command: [ "python", "t5_image_search.py", "$SEARCH_QUERY", "--csv", "$CSV_PATH", "--top", "$TOP_RESULTS" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.9

  resnet-search:
    build:
      context: .
      dockerfile: Dockerfile.search
    container_name: resnet-search
    depends_on:
      - spark-master
    volumes:
      - ./flickr30k_images:/data/images
      # Giả sử bạn có một ảnh query test tên query.jpg trong thư mục gốc
      - ./query.jpg:/data/query.jpg
    environment:
      - QUERY_IMAGE=/data/query.jpg
      - IMAGES_DIR=/data/images
      - TOP_RESULTS=5
    command: [ "python", "resnet_image_search.py", "--query", "$QUERY_IMAGE", "--images_dir", "$IMAGES_DIR", "--top", "$TOP_RESULTS" ]
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.10

networks:
  hdfs_network:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16


